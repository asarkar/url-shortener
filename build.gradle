plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "application"
}

group = "org.asarkar"
version = "0.1"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation enforcedPlatform("org.jetbrains.kotlin:kotlin-bom:$kotlinVersion")
    compile(
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "org.jetbrains.kotlin:kotlin-reflect",
            "javax.annotation:javax.annotation-api",
            "io.micronaut:micronaut-validation",
            "io.micronaut:micronaut-runtime",
            "io.micronaut:micronaut-http-server-netty",
            "io.micronaut:micronaut-discovery-client",
            "io.micronaut.configuration:micronaut-cassandra"
    )
    kapt("io.micronaut:micronaut-inject-java:$micronautVersion")
    kapt("io.micronaut:micronaut-validation:$micronautVersion")
    kaptTest("io.micronaut:micronaut-inject-java:$micronautVersion")
    runtime(
            "ch.qos.logback:logback-classic:$logbackVersion",
            "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion",
            "io.micronaut.configuration:micronaut-redis-lettuce"
    )
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.testcontainers:testcontainers:$testcontainersVersion"
    )
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

shadowJar {
    mergeServiceFiles()
}

application {
    mainClassName = "org.asarkar.urlshortener.Application"
    applicationDefaultJvmArgs = ["-noverify", "-XX:TieredStopAtLevel=1"]
}

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
        // retain parameter names for Java reflection
        javaParameters = true
    }
}
